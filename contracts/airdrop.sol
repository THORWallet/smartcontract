// SPDX-License-Identifier: MIT
pragma solidity 0.8.10;

import "@openzeppelin/contracts/token/ERC20/IERC20.sol";

interface IERC677Receiver {
    function onTokenTransfer(address sender, uint256 value, bytes memory data) external;
}
//**************** Testing
contract Airdrop {

    address private owner;
    constructor() {
        owner = msg.sender;
    }

    //gas cost for 50 fresh addresses: 1416965 gas
    function batchTransferDirect(IERC20 _tgtContract, address[] calldata _to, uint256 _value) external {
        require(msg.sender == owner, "not owner");
        for (uint i=0; i<_to.length; i++) {
            _tgtContract.transfer(_to[i], _value);
        }
    }

    //gas cost for 50 fresh addresses: 1439876 gas
    /*function onTokenTransfer(address, uint256 _value, bytes memory _data) external {
        require(_data.length % 20 == 0);
        uint256 len = _data.length / 20;
        require(_value % len == 0);
        uint256 tokensToSend = _value/len;

        for(uint256 i=0; i<len; i++) {
            IERC20(msg.sender).transfer(bytesToAddress(_data, i*20), tokensToSend);
        }
    }*/

    //gas cost for 50 fresh addresses: 1595203 gas
    /*function batchTransferApprove(IERC20 _tgtContract, address _owner, address[] calldata _to, uint256 _value) external {
        require(msg.sender == owner, "not owner");
        for (uint i=0; i<_to.length; i++) {
            _tgtContract.transferFrom(_owner, _to[i], _value);
        }
    }*/

    //gas cost for 50 fresh addresses: 1414426 gas
    //difference to batchTransferDirect is 2539 gas with 120gwei/gas and 4000 adresses, this will result with current price (1ETH/4200$) in ~80$
    /*function batchTransferDirectCompact(IERC20 _tgtContract, uint256 _value, bytes memory _data) external {
        require(msg.sender == owner, "not owner");
        require(_data.length % 20 == 0);
        uint256 len = _data.length / 20;
        for (uint i=0; i<len; i++) {
            _tgtContract.transfer(bytesToAddress(_data, i*20), _value);
        }
    }

    function bytesToAddress(bytes memory data, uint start) internal pure returns (address) {
        address addr;
        assembly {
            addr := mload(add(data, add(20, start)))
        }
        return addr;
    }*/
}

/*Test input

//nr. addresses:              50
//each gets: 1000000000000000000
//total:    50000000000000000000

160bit addresses as data:
0x3628A2FAE5E105649bDb621eF3A7b9f676ebB36dCd3E425d2eC915ca377Bb48F3B220d7658bB83B4f02fA77Ea5c67B12826069f5A8463de68792B17388E930f2630fDeF31ed1f150293ddb78964046263F2818aE78Db94e8c0249b8Ab993f3C1B302c46E0db63cB04dbFF787CaAFe5c43d1ef362037292Fb5349FDc59367B2f3A1FE1C3bb4c613D9c1ce009a73aAa4f4cAa3e9f686D3E9FEE4F1433f16523C44C78806C9fa51FB93563b11C6c3444e44035255d1101a0dE77963A29fda4Ee217E1D6EA6a3e227b2f2993Bc91cB9D26Ba41AB6196cc8A659B00EA9b8Da6cf78246CCaC48458C15069C0a5Cde578A2c4a2A991dA0e0500e1d9273A763bc5b6cf9606c517114124fC94C442e3cC79822EE5A17A2a8232A449fd949C6d3093D27eFB26fC6F261d78a2F678e2020C17B73e50366f2C1191E7eEb3CD49dcB1994Ff7ef5c4913466431C1Cc1aB626A594384A9Aff7308efea239CAD743A65ADEE4B3eb2749488772DEc024b080BD9BC3C69f2bdc9B43A3Ffc93b5FC37eA77b4117B2f0fe54f6cCbAAc7b51DF66c4dE23E432004dD003139A28e877F4cB40C29E2ed009386Da436700017A88005b1620c688bF6fE92404711A2da39C3ceB6A588559e44B2ce2Db2498f34ebc8cA50fc34844a77a694835E8b765B6825E014fAad7832013A6D7e94c47b6e552d683A676a7619cE0Ff294782098f0B9AAC80362f53202B59d32C5AC728A1c86CDF35c7B3a74c465CabEAA6fc3444Ac1c7ec2E3339909742283ea77e769f5cF9964D988BCa1a3E2d885A988591c68d1278EEd2dB9b26eb1c05A529187C3f0356161b0154d33c139dC58FE7AFe564F8Dbe021A77E011F7eb67E1afF272E84407abE2682b7C0427bFb85b3914dcf4f848CaFdf8DC40aC2A0032BE177Ef21A4C6dab9135227fDaa8674C4129b01DB31DeCbbE05ebcf368CFeE33B2C81eABd260947f6Dae3C2361637895ee99a663a6cda2a9d3Ee3fc4a02D54750f3FAb500620298B1D85B01f7e5E8F05BaB63CcB69636dA2D3b4F637559eCe37f50B75a14B1749223e246886D303b8AAD9f0315c53C8aB824F34149E4924901042290Ff7E436feAc374EeE51022491bE84821861Ed1cC68B876F6D50725B4F5e6461E8f45E16b69B376B4eD3efbFe16C83f90F842F21D02574547f7E1F57be23B8F7023EAE7e98E9c8d6cA928Dd55ca03Bc55fA11d0D4Bf294AA127Bb850246E4AA2C4d5CA4ad573d37289Dc209d9cc6fF0db3F3e9a4b51627B846B92fAFC12d521d8E453FAcB8480Ff8c93465eAE398A24d3831607A23A7A5e3f9675F2412665Cd1B634cd1fb7f8D808f492B043e4ca71cE14Cb27be49997dc79Bfe74aCb3260c8c7E63d4113dc1005CbFA5D61823642a01B8d951B4d989cb63714879653586664e1B7Fea32ec36

160bit addresses as array:
["0x3628A2FAE5E105649bDb621eF3A7b9f676ebB36d","0xCd3E425d2eC915ca377Bb48F3B220d7658bB83B4","0xf02fA77Ea5c67B12826069f5A8463de68792B173","0x88E930f2630fDeF31ed1f150293ddb7896404626","0x3F2818aE78Db94e8c0249b8Ab993f3C1B302c46E","0x0db63cB04dbFF787CaAFe5c43d1ef362037292Fb","0x5349FDc59367B2f3A1FE1C3bb4c613D9c1ce009a","0x73aAa4f4cAa3e9f686D3E9FEE4F1433f16523C44","0xC78806C9fa51FB93563b11C6c3444e44035255d1","0x101a0dE77963A29fda4Ee217E1D6EA6a3e227b2f","0x2993Bc91cB9D26Ba41AB6196cc8A659B00EA9b8D","0xa6cf78246CCaC48458C15069C0a5Cde578A2c4a2","0xA991dA0e0500e1d9273A763bc5b6cf9606c51711","0x4124fC94C442e3cC79822EE5A17A2a8232A449fd","0x949C6d3093D27eFB26fC6F261d78a2F678e2020C","0x17B73e50366f2C1191E7eEb3CD49dcB1994Ff7ef","0x5c4913466431C1Cc1aB626A594384A9Aff7308ef","0xea239CAD743A65ADEE4B3eb2749488772DEc024b","0x080BD9BC3C69f2bdc9B43A3Ffc93b5FC37eA77b4","0x117B2f0fe54f6cCbAAc7b51DF66c4dE23E432004","0xdD003139A28e877F4cB40C29E2ed009386Da4367","0x00017A88005b1620c688bF6fE92404711A2da39C","0x3ceB6A588559e44B2ce2Db2498f34ebc8cA50fc3","0x4844a77a694835E8b765B6825E014fAad7832013","0xA6D7e94c47b6e552d683A676a7619cE0Ff294782","0x098f0B9AAC80362f53202B59d32C5AC728A1c86C","0xDF35c7B3a74c465CabEAA6fc3444Ac1c7ec2E333","0x9909742283ea77e769f5cF9964D988BCa1a3E2d8","0x85A988591c68d1278EEd2dB9b26eb1c05A529187","0xC3f0356161b0154d33c139dC58FE7AFe564F8Dbe","0x021A77E011F7eb67E1afF272E84407abE2682b7C","0x0427bFb85b3914dcf4f848CaFdf8DC40aC2A0032","0xBE177Ef21A4C6dab9135227fDaa8674C4129b01D","0xB31DeCbbE05ebcf368CFeE33B2C81eABd260947f","0x6Dae3C2361637895ee99a663a6cda2a9d3Ee3fc4","0xa02D54750f3FAb500620298B1D85B01f7e5E8F05","0xBaB63CcB69636dA2D3b4F637559eCe37f50B75a1","0x4B1749223e246886D303b8AAD9f0315c53C8aB82","0x4F34149E4924901042290Ff7E436feAc374EeE51","0x022491bE84821861Ed1cC68B876F6D50725B4F5e","0x6461E8f45E16b69B376B4eD3efbFe16C83f90F84","0x2F21D02574547f7E1F57be23B8F7023EAE7e98E9","0xc8d6cA928Dd55ca03Bc55fA11d0D4Bf294AA127B","0xb850246E4AA2C4d5CA4ad573d37289Dc209d9cc6","0xfF0db3F3e9a4b51627B846B92fAFC12d521d8E45","0x3FAcB8480Ff8c93465eAE398A24d3831607A23A7","0xA5e3f9675F2412665Cd1B634cd1fb7f8D808f492","0xB043e4ca71cE14Cb27be49997dc79Bfe74aCb326","0x0c8c7E63d4113dc1005CbFA5D61823642a01B8d9","0x51B4d989cb63714879653586664e1B7Fea32ec36"]

TGT mint input:
["0x5B38Da6a701c568545dCfcB03FcB875f56beddC4"],["750000000000000000000000000"]
*/