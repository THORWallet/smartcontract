// SPDX-License-Identifier: MIT
pragma solidity 0.8.10;

import "@openzeppelin/contracts/token/ERC20/IERC20.sol";

interface IERC677Receiver {
    function onTokenTransfer(address sender, uint256 value, bytes memory data) external;
}
//**************** Testing
contract Airdrop {

    function onTokenTransfer(address, uint256 value, bytes memory data) external {
        require(data.length % 20 == 0);
        uint256 len = data.length / 20;
        require(value % len == 0);
        uint256 tokensToSend = value/len;

        for(uint256 i=0; i<len; i++) {
            IERC20(msg.sender).transfer(bytesToAddress(data, i*20), tokensToSend);
        }
    }

    function batchTransfer(IERC20 tgtContract, address owner, address[] calldata to, uint256 value) external {
        for (uint i=0; i<to.length; i++) {
            tgtContract.transferFrom(owner, to[i], value);
        }
    }

    function batchTransfer2(IERC20 tgtContract, address[] calldata to, uint256 value) external {
        for (uint i=0; i<to.length; i++) {
            tgtContract.transfer(to[i], value);
        }
    }

    function batchTransfer3(IERC20 tgtContract, uint256 value, bytes memory data) external {
        require(data.length % 20 == 0);
        uint256 len = data.length / 20;
        for (uint i=0; i<len; i++) {
            tgtContract.transfer(bytesToAddress(data, i*20), value);
        }
    }


    function bytesToAddress(bytes memory data, uint start) internal pure returns (address) {
        address addr;
        assembly {
            addr := mload(add(data, add(20, start)))
        }
        return addr;
    }
}

//Kosten fuer 4000 airdrops wenn man 50er batches macht: 103k
//1.2m gas fuer batch of 50

//1.43m gas fuer batch of 50 -> onTokenreceived
//560k gas fuer batch mit transfer2
//550k gas fuer batch mit transfer3
//1416965

//0x3628A2FAE5E105649bDb621eF3A7b9f676ebB36dCd3E425d2eC915ca377Bb48F3B220d7658bB83B4f02fA77Ea5c67B12826069f5A8463de68792B17388E930f2630fDeF31ed1f150293ddb78964046263F2818aE78Db94e8c0249b8Ab993f3C1B302c46E0db63cB04dbFF787CaAFe5c43d1ef362037292Fb5349FDc59367B2f3A1FE1C3bb4c613D9c1ce009a73aAa4f4cAa3e9f686D3E9FEE4F1433f16523C44C78806C9fa51FB93563b11C6c3444e44035255d1101a0dE77963A29fda4Ee217E1D6EA6a3e227b2f2993Bc91cB9D26Ba41AB6196cc8A659B00EA9b8Da6cf78246CCaC48458C15069C0a5Cde578A2c4a2A991dA0e0500e1d9273A763bc5b6cf9606c517114124fC94C442e3cC79822EE5A17A2a8232A449fd949C6d3093D27eFB26fC6F261d78a2F678e2020C17B73e50366f2C1191E7eEb3CD49dcB1994Ff7ef5c4913466431C1Cc1aB626A594384A9Aff7308efea239CAD743A65ADEE4B3eb2749488772DEc024b080BD9BC3C69f2bdc9B43A3Ffc93b5FC37eA77b4117B2f0fe54f6cCbAAc7b51DF66c4dE23E432004dD003139A28e877F4cB40C29E2ed009386Da436700017A88005b1620c688bF6fE92404711A2da39C3ceB6A588559e44B2ce2Db2498f34ebc8cA50fc34844a77a694835E8b765B6825E014fAad7832013A6D7e94c47b6e552d683A676a7619cE0Ff294782098f0B9AAC80362f53202B59d32C5AC728A1c86CDF35c7B3a74c465CabEAA6fc3444Ac1c7ec2E3339909742283ea77e769f5cF9964D988BCa1a3E2d885A988591c68d1278EEd2dB9b26eb1c05A529187C3f0356161b0154d33c139dC58FE7AFe564F8Dbe021A77E011F7eb67E1afF272E84407abE2682b7C0427bFb85b3914dcf4f848CaFdf8DC40aC2A0032BE177Ef21A4C6dab9135227fDaa8674C4129b01DB31DeCbbE05ebcf368CFeE33B2C81eABd260947f6Dae3C2361637895ee99a663a6cda2a9d3Ee3fc4a02D54750f3FAb500620298B1D85B01f7e5E8F05BaB63CcB69636dA2D3b4F637559eCe37f50B75a14B1749223e246886D303b8AAD9f0315c53C8aB824F34149E4924901042290Ff7E436feAc374EeE51022491bE84821861Ed1cC68B876F6D50725B4F5e6461E8f45E16b69B376B4eD3efbFe16C83f90F842F21D02574547f7E1F57be23B8F7023EAE7e98E9c8d6cA928Dd55ca03Bc55fA11d0D4Bf294AA127Bb850246E4AA2C4d5CA4ad573d37289Dc209d9cc6fF0db3F3e9a4b51627B846B92fAFC12d521d8E453FAcB8480Ff8c93465eAE398A24d3831607A23A7A5e3f9675F2412665Cd1B634cd1fb7f8D808f492B043e4ca71cE14Cb27be49997dc79Bfe74aCb3260c8c7E63d4113dc1005CbFA5D61823642a01B8d951B4d989cb63714879653586664e1B7Fea32ec36

//"0xd9145CCE52D386f254917e481eB44e9943F39138","50000000000000000000","0x3628A2FAE5E105649bDb621eF3A7b9f676ebB36dCd3E425d2eC915ca377Bb48F3B220d7658bB83B4f02fA77Ea5c67B12826069f5A8463de68792B17388E930f2630fDeF31ed1f150293ddb78964046263F2818aE78Db94e8c0249b8Ab993f3C1B302c46E0db63cB04dbFF787CaAFe5c43d1ef362037292Fb5349FDc59367B2f3A1FE1C3bb4c613D9c1ce009a73aAa4f4cAa3e9f686D3E9FEE4F1433f16523C44C78806C9fa51FB93563b11C6c3444e44035255d1101a0dE77963A29fda4Ee217E1D6EA6a3e227b2f2993Bc91cB9D26Ba41AB6196cc8A659B00EA9b8Da6cf78246CCaC48458C15069C0a5Cde578A2c4a2A991dA0e0500e1d9273A763bc5b6cf9606c517114124fC94C442e3cC79822EE5A17A2a8232A449fd949C6d3093D27eFB26fC6F261d78a2F678e2020C17B73e50366f2C1191E7eEb3CD49dcB1994Ff7ef5c4913466431C1Cc1aB626A594384A9Aff7308efea239CAD743A65ADEE4B3eb2749488772DEc024b080BD9BC3C69f2bdc9B43A3Ffc93b5FC37eA77b4117B2f0fe54f6cCbAAc7b51DF66c4dE23E432004dD003139A28e877F4cB40C29E2ed009386Da436700017A88005b1620c688bF6fE92404711A2da39C3ceB6A588559e44B2ce2Db2498f34ebc8cA50fc34844a77a694835E8b765B6825E014fAad7832013A6D7e94c47b6e552d683A676a7619cE0Ff294782098f0B9AAC80362f53202B59d32C5AC728A1c86CDF35c7B3a74c465CabEAA6fc3444Ac1c7ec2E3339909742283ea77e769f5cF9964D988BCa1a3E2d885A988591c68d1278EEd2dB9b26eb1c05A529187C3f0356161b0154d33c139dC58FE7AFe564F8Dbe021A77E011F7eb67E1afF272E84407abE2682b7C0427bFb85b3914dcf4f848CaFdf8DC40aC2A0032BE177Ef21A4C6dab9135227fDaa8674C4129b01DB31DeCbbE05ebcf368CFeE33B2C81eABd260947f6Dae3C2361637895ee99a663a6cda2a9d3Ee3fc4a02D54750f3FAb500620298B1D85B01f7e5E8F05BaB63CcB69636dA2D3b4F637559eCe37f50B75a14B1749223e246886D303b8AAD9f0315c53C8aB824F34149E4924901042290Ff7E436feAc374EeE51022491bE84821861Ed1cC68B876F6D50725B4F5e6461E8f45E16b69B376B4eD3efbFe16C83f90F842F21D02574547f7E1F57be23B8F7023EAE7e98E9c8d6cA928Dd55ca03Bc55fA11d0D4Bf294AA127Bb850246E4AA2C4d5CA4ad573d37289Dc209d9cc6fF0db3F3e9a4b51627B846B92fAFC12d521d8E453FAcB8480Ff8c93465eAE398A24d3831607A23A7A5e3f9675F2412665Cd1B634cd1fb7f8D808f492B043e4ca71cE14Cb27be49997dc79Bfe74aCb3260c8c7E63d4113dc1005CbFA5D61823642a01B8d951B4d989cb63714879653586664e1B7Fea32ec36"
